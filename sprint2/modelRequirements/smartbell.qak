System smartbell

Request enter: enter(TEMP)
Reply tempNotOk : tempNotOk(OK) 
Reply tempOk : tempOk(TIME, ID)

Request waitTime: waitTime(ID)
Reply   waitTimeAnswer: waitTime(TIME)

Context ctxwaiter ip [host="localhost" port=8010]

ExternalQActor waiter context ctxwaiter

QActor smartbell context ctxwaiter{ 
	[# var ID #]
	
	State s0 initial{
		println("smartBell | s0")
		discardMsg Off
	} Goto wait
	
	State wait{
		println("smartBell | wait")
		println("smartBell | waiting for client requests")
		
	} Transition t0 whenRequest enter -> checkTemp
					whenReply waitTimeAnswer -> answer
	
	
	
	State checkTemp{
		//temp cliente
			if [ # temp > 37 # ] {
				request waiter -m waitTime: waitTime($ID)
			}
			else{
				replyTo enter with tempNotOk: tempNotOK(OK)
			}
	}Goto wait
	
	State answer{
		updateResource[# "answer" #]
		println("smartBell | answer")
		onMsg(waitTimeAnswer : waitTimeAnswer(TIME)){
			replyTo enter with tempOk: tempOk($ID)
		}
		 
		[#
			ID = ID + 1
		#]
	}Goto wait
}